// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© coinpass-trading

//@version=4
study("Basket Vs BTC Bottoming", overlay=true)

// Create Input lookback lengths
macro_low_length = input(title="Macro low Length", type=input.integer, defval=240)
micro_low_length = input(title="Micro Low Length", type=input.integer, defval=60)
pico_low_length = input(title="Pico Low Length", type=input.integer, defval=20)

// Define Basket of Coins
btc = input(title="Symbol", type= input.symbol, defval="BINANCE:BTCUSDTPERP ")
btc_live_low = security(btc, timeframe.period , low)
eth = input(title="Symbol", type= input.symbol, defval="BINANCE:ETHUSDTPERP ")
eth_live_low = security(eth, timeframe.period , low)
ltc = input(title="Symbol", type= input.symbol, defval="BINANCE:LTCUSDTPERP ")
ltc_live_low = security(ltc, timeframe.period , low)
dot = input(title="Symbol", type= input.symbol, defval="BINANCE:DOTUSDTPERP ")
dot_live_low = security(dot, timeframe.period , low)
link = input(title="Symbol", type= input.symbol, defval="BINANCE:LINKUSDTPERP ")
link_live_low = security(link, timeframe.period , low)
aave = input(title="Symbol", type= input.symbol, defval="BINANCE:AAVEUSDTPERP ")
aave_live_low = security(aave, timeframe.period , low)



// Calculate Values
coin_macro_Lows  = lowest(low, macro_low_length)[1]
coin_micro_Lows  = lowest(low, micro_low_length)[1]
coin_pico_Lows  = lowest(low, pico_low_length)[1]
btc_macro_low = lowest(btc_live_low, macro_low_length)[1]
btc_micro_low = lowest(btc_live_low, micro_low_length)[1]
btc_pico_low = lowest(btc_live_low, pico_low_length)[1]
eth_macro_low = lowest(eth_live_low, macro_low_length)[1]
eth_micro_low = lowest(eth_live_low, micro_low_length)[1]
eth_pico_low = lowest(eth_live_low, pico_low_length)[1]
ltc_macro_low = lowest(ltc_live_low, macro_low_length)[1]
ltc_micro_low = lowest(ltc_live_low, micro_low_length)[1]
ltc_pico_low = lowest(ltc_live_low, pico_low_length)[1]
dot_macro_low = lowest(dot_live_low, macro_low_length)[1]
dot_micro_low = lowest(dot_live_low, micro_low_length)[1]
dot_pico_low = lowest(dot_live_low, pico_low_length)[1]
link_macro_low = lowest(link_live_low, macro_low_length)[1]
link_micro_low = lowest(link_live_low, micro_low_length)[1]
link_pico_low = lowest(link_live_low, pico_low_length)[1]
aave_macro_low = lowest(aave_live_low, macro_low_length)[1]
aave_micro_low = lowest(aave_live_low, micro_low_length)[1]
aave_pico_low = lowest(aave_live_low, pico_low_length)[1]


// Plot Values on the Chart
//plot(series=lowest_low,color=color.purple, linewidth=2,offset=1 )

// Background highlights
bgColour =  (  ((low > coin_macro_Lows)and(btc_live_low<btc_macro_low) and(eth_live_low>eth_macro_low) and(ltc_live_low>ltc_macro_low) and(dot_live_low>dot_macro_low)  and(link_live_low>link_macro_low) and(aave_live_low>aave_macro_low))  and
               ((low > coin_micro_Lows)and(btc_live_low<btc_micro_low) and(eth_live_low>eth_micro_low) and(ltc_live_low>ltc_micro_low) and(dot_live_low>dot_micro_low)  and(link_live_low>link_micro_low) and(aave_live_low>aave_micro_low))  and
               ((low > coin_pico_Lows) and(btc_live_low<btc_pico_low)  and(eth_live_low>eth_pico_low)  and(ltc_live_low>ltc_pico_low)  and(dot_live_low>dot_pico_low)   and(link_live_low>link_pico_low)  and(aave_live_low>aave_pico_low))  ) ? color.black :na

bgcolor(color=bgColour, transp=20)























// Get a Symbol Value
//emaLength = input(title="EMA Length", type=input.integer,defval=50, minval=10)
//symbolClose = security(btc, timeframe.period , close)
//symbolEma = ema(symbolClose, emaLength)
//emaColour = (symbolClose > symbolEma) ? color.green : color.red
//plot(series=symbolClose, color=color.orange, linewidth=2)
//plot(series=symbolEma, color=emaColour, style=plot.style_cross)




